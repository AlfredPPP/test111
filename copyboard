import subprocess
import openpyxl
import win32com.client
import time
import os

# 定义 .gms 文件和 .xlsm 文件的路径
gms_file_path = "path/to/your/file.gms"
xlsm_file_path = "path/to/generated/file.xlsm"  # 替换为实际生成的 .xlsm 文件路径
gms_exe_path = "path/to/gms.exe"  # 替换为 gms.exe 的路径

# 运行 .gms 文件
def run_gms_file(gms_path, exe_path):
    command = [exe_path, gms_path]
    try:
        result = subprocess.run(command, check=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        print("GMS script output:", result.stdout.decode())
        print("GMS script executed successfully.")
    except subprocess.CalledProcessError as e:
        print("An error occurred while running the GMS script.")
        print("Error message:", e.stderr.decode())

# 等待文件生成
def wait_for_file(file_path, timeout=30):
    start_time = time.time()
    while not os.path.exists(file_path):
        if time.time() - start_time > timeout:
            raise TimeoutError(f"File {file_path} not found within {timeout} seconds.")
        time.sleep(1)

# 填充 Excel 数据
def fill_excel_data(file_path):
    wb = openpyxl.load_workbook(file_path, keep_vba=True)
    sheet = wb["SheetName"]  # 替换为实际的工作表名称
    
    # 在这里填充单元格数据，例如：
    sheet['A1'] = 'Hello, world!'
    sheet['B2'] = 12345

    # 保存修改
    wb.save(file_path)

# 运行 Excel 宏
def run_excel_macro(file_path, macro_name):
    excel = win32com.client.Dispatch("Excel.Application")
    excel.Visible = False  # 不显示 Excel 界面
    workbook = excel.Workbooks.Open(file_path)
    
    # 运行宏
    excel.Application.Run(macro_name)
    
    # 保存并关闭工作簿
    workbook.Close(SaveChanges=True)
    excel.Quit()

# 执行完整流程
run_gms_file(gms_file_path, gms_exe_path)  # 运行 .gms 文件

# 等待生成的 .xlsm 文件
wait_for_file(xlsm_file_path)

# 填充单元格数据
fill_excel_data(xlsm_file_path)

# 运行宏，替换为实际的宏名称
run_excel_macro(xlsm_file_path, "MacroName")