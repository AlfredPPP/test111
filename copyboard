import threading
import asyncio
import aiohttp
import json
from datetime import datetime

class DataFeed:
    def __init__(self):
        self.final_import_body_collection = []  # Initialize with your data
        self.import_status_collection = []
        self.final_import_status_collection = {}

    def thr_post_data_feed(self):
        asyncio.run(self.post_all_data_feed())

    async def post_all_data_feed(self):
        max_d = len(self.final_import_body_collection)
        semaphore = asyncio.Semaphore(max_d)
        tasks = []

        for body in self.final_import_body_collection:
            task = asyncio.create_task(self.post_data_feed(json.loads(body), semaphore))
            tasks.append(task)

        self.import_status_collection = await asyncio.gather(*tasks, return_exceptions=False)
        print(self.import_status_collection)

        self.final_import_status_collection = {}
        for s in self.import_status_collection:
            self.final_import_status_collection[list(json.loads(s).keys())[0]] = "InProgress"
        print(self.final_import_status_collection)

    async def post_data_feed(self, body, sem):
        async with sem:
            token = 'kajsdlkjaksldjalks'
            headers = {"authorization": "Bearer " + token}
            data = json.dumps(body)

            import_name = body.get("importName")
            import_status = {}

            if body.get("env") == "0002":
                url = 'https://api-uat.onesourcetax.com/trusts/v1/imports/'
            else:
                url = 'https://api-apac.onesourcetax.com/trusts/v1/imports/'

            async with aiohttp.ClientSession() as session:
                async with session.post(url, headers=headers, data=data) as res:
                    content = await res.text()
                    if len(content.get("importId", "")) > 0:
                        import_status[import_name] = content.get("importId", "")

            if not import_status:
                await self.post_import_separate(body)
            return json.dumps(import_status)

    async def post_import_separate(self, body):
        # Implement retry logic if necessary
        pass

if __name__ == "__main__":
    data_feed = DataFeed()
    data_feed.thr_post_data_feed()
    print(datetime.now())