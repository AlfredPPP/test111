import pdfplumber
import json
import os
import re

def extract_pdf_to_json(pdf_path, output_folder, patterns):
    # Get PDF file name (without extension)
    pdf_filename = os.path.basename(pdf_path)
    json_filename = os.path.splitext(pdf_filename)[0] + '.json'
    json_path = os.path.join(output_folder, json_filename)

    results = []
    # Open the PDF file
    with pdfplumber.open(pdf_path) as pdf:
        for i, page in enumerate(pdf.pages):
            page_text = page.extract_text()
            if page_text:
                for pattern_name, pattern in patterns.items():
                    for match in re.finditer(pattern, page_text):
                        result = {
                            "page_number": i + 1,
                            "pattern_name": pattern_name,
                            "match": match.group(1) if match.groups() else match.group()
                        }
                        results.append(result)

    # Write content to JSON file
    with open(json_path, 'w', encoding='utf-8') as json_file:
        json.dump(results, json_file, ensure_ascii=False, indent=4)

    print(f"PDF content extracted to {json_path}")

def process_pdf_folder(input_folder, output_folder, patterns):
    # Create output folder if it does not exist
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    # Iterate over all files in the input folder
    for filename in os.listdir(input_folder):
        if filename.lower().endswith('.pdf'):
            pdf_path = os.path.join(input_folder, filename)
            extract_pdf_to_json(pdf_path, output_folder, patterns)

# Example usage
input_folder = 'path/to/pdf_folder'  # Replace with your PDF folder path
output_folder = 'pdf_extractor_output'
patterns = {
    'example_pattern': r'your_regex_pattern_here',
    'another_pattern': r'another_regex_pattern_here'
}
process_pdf_folder(input_folder, output_folder, patterns)