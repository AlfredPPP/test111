import aiohttp
import asyncio

async def fetch(session, url):
    try:
        async with session.get(url) as response:
            if response.status == 201:
                try:
                    data = await response.json()  # You can use .text(), .read(), etc. based on response type
                    print("Successfully processed 201 Created response:", data)
                    # Continue with additional processing logic here
                except Exception as e:
                    print("Error occurred while processing 201 response body:", str(e))
            elif response.status == 400:
                print("Received 400 Bad Request. Please verify request parameters.")
            else:
                print(f"Received unexpected HTTP status code: {response.status}")
    except aiohttp.ClientError as e:
        print("An error occurred during the HTTP request:", str(e))

async def main():
    async with aiohttp.ClientSession() as session:
        await fetch(session, 'https://example.com/api/resource')

# Entry point
asyncio.run(main())