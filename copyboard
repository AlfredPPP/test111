import aiohttp
import asyncio

async def fetch(session, url, payload=None, headers=None):
    try:
        async with session.post(url, json=payload, headers=headers) as response:
            if response.status == 201:
                try:
                    data = await response.json()
                    print("Successfully processed 201 Created response:", data)
                    return data
                except Exception as e:
                    print("Error while parsing 201 response JSON:", str(e))
            elif response.status == 400:
                print("Received 400 Bad Request. Please check your request data.")
            else:
                print(f"Received unexpected HTTP status: {response.status}")
    except asyncio.TimeoutError:
        print("Request timed out. The server might have received the request but took too long to respond.")
    except aiohttp.ClientError as e:
        print("HTTP request failed due to a client error:", str(e))

async def main():
    async with aiohttp.ClientSession() as session:
        await fetch(
            session,
            url="https://example.com/api/resource",
            payload={"some": "data"},
            headers={"Content-Type": "application/json"}
        )

if __name__ == "__main__":
    asyncio.run(main())