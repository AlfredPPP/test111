当然可以，以下是一个简单的Vue.js应用的构建好的文件，以及如何使用Flask托管它的示例。

### Vue.js 构建好的文件

将这些文件保存在一个名为 `dist` 的目录中。

#### `index.html`

```html
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Vue.js App</title>
</head>
<body>
  <div id="app"></div>
  <script src="/static/js/app.js"></script>
</body>
</html>
```

#### `js/app.js`

```javascript
(function() {
  document.getElementById('app').innerHTML = `
    <div>
      <h1>Hello, Vue.js!</h1>
      <p>This is a simple Vue.js application served by Flask.</p>
    </div>
  `;
})();
```

### Flask 应用

1. 创建一个新的目录并进入该目录：
   ```bash
   mkdir flask-vue-app
   cd flask-vue-app
   ```

2. 创建一个虚拟环境并激活它：
   ```bash
   python -m venv venv
   source venv/bin/activate  # 在Windows上使用 `venv\Scripts\activate`
   ```

3. 安装Flask：
   ```bash
   pip install Flask
   ```

4. 创建Flask应用结构：
   ```bash
   mkdir -p app/static/js
   ```

5. 将上面的Vue.js构建好的文件放入对应的目录中：

   - `index.html` 放在 `app/static` 目录下。
   - `app.js` 放在 `app/static/js` 目录下。

6. 创建一个简单的Flask应用：

   在 `app` 目录中创建一个名为 `app.py` 的文件，内容如下：

   ```python
   from flask import Flask, send_from_directory

   app = Flask(__name__, static_folder='static')

   @app.route('/')
   def serve():
       return send_from_directory(app.static_folder, 'index.html')

   @app.route('/static/js/<path:path>')
   def send_js(path):
       return send_from_directory('static/js', path)

   if __name__ == '__main__':
       app.run(debug=True)
   ```

### 运行Flask应用

1. 确保你在虚拟环境中，然后运行Flask应用：
   ```bash
   python app/app.py
   ```

2. 打开浏览器并访问 `http://127.0.0.1:5000`，你应该能看到你的Vue.js应用运行在Flask服务器上。

这样，你就可以在没有安装Node.js的情况下使用Flask托管一个简单的Vue.js应用。